on:
  release:
    types: [published]

name: Deployment

permissions:
  contents: write

jobs:
  build-windows:
    name: Build for Windows
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install .NET 8.0.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Restore Tools
        run: dotnet tool restore

      - name: Build
        run: dotnet publish YesserCalculator/YesserCalculator.csproj -c Release -p:Version=${{ github.event.release.tag_name }} -o ./release
      
      - name: Compress
        run: Compress-Archive ./release compress.zip
        shell: pwsh

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: compress.zip
          asset_name: Windows-$tag.zip
          tag: ${{ github.ref }}
          overwrite: true
  
  build-mac:
    name: Build for Mac
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install .NET 8.0.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Restore Tools
        run: dotnet tool restore

      - name: Build
        run: dotnet publish YesserCalculator/YesserCalculator.csproj -c Release -p:Version=${{ github.event.release.tag_name }} -o ./Template.app/Contents/MacOS

      - name: Compress
        run: tar -cvzf compress.tar.gz ./Template.app

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: compress.tar.gz
          asset_name: MacOS-$tag.app.tar.gz
          tag: ${{ github.ref }}
          overwrite: true

  build-linux:
    name: Build for Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install .NET 8.0.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Restore Tools
        run: dotnet tool restore

      - name: Build
        run: dotnet publish YesserCalculator/YesserCalculator.csproj -c Release -p:Version=${{ github.event.release.tag_name }} -o ./release
      
      - name: Compress
        run: tar -cvzf compress.tar.gz ./release/*

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: compress.tar.gz
          asset_name: Linux-$tag.tar.gz
          tag: ${{ github.ref }}
          overwrite: true
          
  build-package:
    name: Build Extension package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install .NET 8.0.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Restore Tools
        run: dotnet tool restore

      - name: Build
        run: |
          dotnet build YesserCalculator.Extension/YesserCalculator.Extension.csproj -c Release -p:Version=${{ github.event.release.tag_name }}
          dotnet pack YesserCalculator.Extension/YesserCalculator.Extension.csproj -c Release -p:Version=${{ github.event.release.tag_name }} -o ./release

      - name: Publish NuGet package
        run: |
          foreach($file in (Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
          }
        shell: pwsh

  build-templates:
    name: Build Extension templates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install .NET 8.0.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Restore Tools
        run: dotnet tool restore

      - name: Build
        run: dotnet pack YesserCalculator.ExtensionTemplates/YesserCalculator.ExtensionTemplates.csproj -c Release -p:PackageVersion=${{ github.event.release.tag_name }} -o ./release

      - name: Publish NuGet package
        run: |
          foreach($file in (Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
          }
        shell: pwsh
